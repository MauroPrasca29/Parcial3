# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: Snyk Container

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '16 23 * * 4'

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t snyk-test .

    - name: Run Snyk to check Docker image for vulnerabilities
      continue-on-error: true
      uses: snyk/actions/docker@v2
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: snyk-test
        args: >
          --file=Dockerfile
          --sarif-file-output=snyk.sarif

    - name: Fix securitySeverity null issue in SARIF
      if: always()
      run: |
        if [ -f snyk.sarif ]; then
          sed -i 's/"securitySeverity":null/"securitySeverity":0.0/g' snyk.sarif
        else
          echo "snyk.sarif no encontrado"
        fi

    - name: Show fixed SARIF file content
      if: always()
      run: |
        if [ -f snyk.sarif ]; then
          cat snyk.sarif
        fi

    - name: Upload result to GitHub Code Scanning
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif
